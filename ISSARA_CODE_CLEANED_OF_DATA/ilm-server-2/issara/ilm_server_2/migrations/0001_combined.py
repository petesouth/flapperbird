# Generated by Django 2.2.19 on 2021-03-22 12:33

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContractType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'contract_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('lat', models.CharField(blank=True, max_length=20, null=True)),
                ('lng', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'countries',
                'managed': True,
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'document_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'industries',
                'managed': True,
                'verbose_name_plural': 'Industries',
            },
        ),
        migrations.CreateModel(
            name='InteractionChannel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'interaction_channels',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='InteractionReason',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'interaction_reasons',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IssueCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'issue_categories',
                'managed': True,
                'verbose_name_plural': 'Issue categories',
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('gis_code', models.CharField(blank=True, max_length=100, null=True)),
                ('crossing', models.IntegerField(blank=True, null=True)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Country')),
                ('lat', models.CharField(blank=True, max_length=20, null=True)),
                ('lng', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'provinces',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VesselType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'vessel_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='WorkPlace',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'workplaces',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('gis_code', models.CharField(blank=True, max_length=100, null=True)),
                ('crossing', models.IntegerField(blank=True, null=True)),
                ('province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Province')),
            ],
            options={
                'db_table': 'districts',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Nationality',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'nationalities',
                'managed': True,
                'verbose_name_plural': 'Nationalities',
            },
        ),
        migrations.CreateModel(
            name='HowHearIssara',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'how_here_issara',
                'managed': True,
            },
        ),
        migrations.AlterModelTable(
            name='howhearissara',
            table='how_hear_issara',
        ),
        migrations.CreateModel(
            name='StrategicPartner',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('address', models.CharField(blank=True, max_length=1024, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=1024, null=True)),
                ('contract_start_date', models.DateField(blank=True, null=True)),
                ('contract_end_date', models.DateField(blank=True, null=True)),
                ('payment_amount', models.IntegerField(blank=True, null=True)),
                ('payment_receipt_date', models.DateField(blank=True, null=True)),
                ('date_last_annual_risk_report', models.DateField(blank=True, null=True)),
                ('date_last_call_meeting_visit', models.DateField(blank=True, null=True)),
                ('focal_point_name', models.CharField(blank=True, max_length=1024, null=True)),
                ('focal_point_title', models.CharField(blank=True, max_length=1024, null=True)),
                ('focal_point_email', models.CharField(blank=True, max_length=1024, null=True)),
                ('focal_point_phone_number', models.CharField(blank=True, max_length=56, null=True)),
                ('products_sourced', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_modified', models.DateTimeField(auto_now=True, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Country')),
            ],
            options={
                'verbose_name_plural': 'Strategic partners',
                'db_table': 'strategic_partners',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IssaraUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('nick_name', models.CharField(max_length=100)),
                ('roles', models.CharField(max_length=100)),
                ('active', models.BooleanField()),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ResponseInteractionType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'response_interaction_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StrategicPartnerResponse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
                ('interaction_date', models.DateField(blank=True, null=True)),
                ('interaction_event_location', models.TextField(blank=True, null=True)),
                ('response_focal_point', models.CharField(blank=True, max_length=1024, null=True)),
                ('general_notes', models.TextField(blank=True, null=True)),
                ('next_steps', models.TextField(blank=True, null=True)),
                ('issara_user_focal_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.IssaraUser')),
                ('response_interaction_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.ResponseInteractionType')),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StrategicPartnerFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1024)),
                ('url', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateField(blank=True, null=True)),
                ('strategic_partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.StrategicPartner')),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StrategicPartnerResponseFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1024)),
                ('url', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateField(blank=True, null=True)),
                ('strategic_partner_response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.StrategicPartnerResponse')),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.AlterModelTable(
            name='strategicpartnerfile',
            table='strategic_partner_files',
        ),
        migrations.AlterModelTable(
            name='strategicpartnerresponse',
            table='strategic_partner_responses',
        ),
        migrations.AlterModelTable(
            name='strategicpartnerresponsefile',
            table='strategic_partner_response_files',
        ),
        migrations.CreateModel(
            name='Broker',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Brokers',
                'db_table': 'brokers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ClientStatus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Client Statuses',
                'db_table': 'client_statuses',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ClientType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Client Types',
                'db_table': 'client_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Genders',
                'db_table': 'genders',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ReferralAction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Referral Actions',
                'db_table': 'referral_actions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CaseStatus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'case_statuses',
                'managed': True,
                'verbose_name_plural': 'Case Statuses',
            },
        ),
        migrations.RemoveField(
            model_name='strategicpartnerfile',
            name='strategic_partner',
        ),
        migrations.RemoveField(
            model_name='strategicpartnerresponsefile',
            name='strategic_partner_response',
        ),
        migrations.AddField(
            model_name='strategicpartner',
            name='strategic_partner_files',
            field=models.ManyToManyField(blank=True, to='ilm_server_2.StrategicPartnerFile'),
        ),
        migrations.AddField(
            model_name='strategicpartnerresponse',
            name='strategic_partner_response_files',
            field=models.ManyToManyField(blank=True, to='ilm_server_2.StrategicPartnerResponseFile'),
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('tier_id', models.IntegerField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=20, null=True)),
                ('gps', models.CharField(blank=True, max_length=1024, null=True)),
                ('vessel_number', models.CharField(blank=True, max_length=100, null=True)),
                ('fishing_gear_liscense_number', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=1024, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_email', models.CharField(blank=True, max_length=100, null=True)),
                ('name_harvesting_business', models.CharField(blank=True, max_length=100, null=True)),
                ('num_vessels_sourced_from', models.IntegerField(blank=True, null=True)),
                ('total_num_workers', models.IntegerField(blank=True, null=True)),
                ('total_num_thai_workers', models.IntegerField(blank=True, null=True)),
                ('total_num_cambodian_workers', models.IntegerField(blank=True, null=True)),
                ('total_num_myanmar_workers', models.IntegerField(blank=True, null=True)),
                ('total_num_lao_workers', models.IntegerField(blank=True, null=True)),
                ('total_num_vietnamese_workers', models.IntegerField(blank=True, null=True)),
                ('hiring_practice', models.TextField(blank=True, null=True)),
                ('other', models.TextField(blank=True, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Country')),
                ('district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.District')),
                ('industry', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Industry')),
                ('province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Province')),
                ('vessel_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.VesselType')),
                ('total_num_men_workers', models.IntegerField(blank=True, null=True)),
                ('total_num_women_workers', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'suppliers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Recruiter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('tier_id', models.IntegerField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=20, null=True)),
                ('gps', models.CharField(blank=True, max_length=1024, null=True)),
                ('facebook_website', models.CharField(blank=True, max_length=1024, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_email', models.CharField(blank=True, max_length=100, null=True)),
                ('num_of_staff', models.IntegerField(blank=True, null=True)),
                ('num_lisc_agents', models.IntegerField(blank=True, null=True)),
                ('worker_placement_industries', models.TextField(blank=True, null=True)),
                ('other', models.TextField(blank=True, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Country')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.District')),
                ('industry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Industry')),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Province')),
                ('golden_dreams_recruiter_id', models.IntegerField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('website', models.TextField(blank=True, null=True)),
                ('lat', models.TextField(blank=True, null=True)),
                ('lng', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'recruiters',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='KpiCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('issue_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.IssueCategory')),
            ],
            options={
                'db_table': 'kpi_categories',
                'managed': True,
                'verbose_name': 'KPI category',
                'verbose_name_plural': 'KPI categories',
            },
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_modified', models.DateField(auto_now=True, null=True)),
                ('referral_actions', models.ManyToManyField(blank=True, to='ilm_server_2.ReferralAction')),
            ],
            options={
                'verbose_name_plural': 'Referrals',
                'db_table': 'referrals',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ethnicity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Country')),
                ('nationality', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Nationality')),
            ],
            options={
                'db_table': 'ethnicities',
                'managed': True,
                'verbose_name_plural': 'Ethnicities',
            },
        ),
        migrations.AddField(
            model_name='strategicpartnerresponse',
            name='strategic_partner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.StrategicPartner'),
        ),
        migrations.AlterModelTable(
            name='district',
            table=None,
        ),
        migrations.AlterModelOptions(
            name='district',
            options={'managed': True, 'verbose_name_plural': 'Districts'},
        ),
        migrations.AlterModelTable(
            name='district',
            table='districts',
        ),
        migrations.CreateModel(
            name='RecruiterResponseFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1024)),
                ('url', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'recruiter_response_files',
                'managed': True,
                'verbose_name_plural': 'Recruiter Response Files',
            },
        ),
        migrations.CreateModel(
            name='SupplierResponseFile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1024)),
                ('url', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('created', models.DateField(auto_now_add=True, null=True)),
            ],
            options={
                'db_table': 'supplier_response_files',
                'managed': True,
                'verbose_name_plural': 'Supplier Response Files',
            },
        ),
        migrations.CreateModel(
            name='CaseInteraction',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('summary', models.TextField(blank=True, null=True)),
                ('interacted', models.DateField(blank=True, null=True)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_modified', models.DateField(auto_now=True, null=True)),
                ('interaction_channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.InteractionChannel')),
                ('interaction_reason', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.InteractionReason')),
                ('issara_staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('type', models.CharField(blank=True, choices=[('Incoming', 'Incoming'), ('Outcoming', 'Outcoming')], default='Incoming', max_length=20, null=True)),
            ],
            options={
                'verbose_name_plural': 'Case Interactions',
                'db_table': 'case_interactions',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SupplierCRCResponse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateField(auto_now_add=True, null=True)),
                ('avg_worker_response_feedback', models.IntegerField(blank=True, null=True)),
                ('avg_worker_recruitment_mngmt_feedback', models.IntegerField(blank=True, null=True)),
                ('issara_tech_assessment_response_quality_hr', models.IntegerField(blank=True, null=True)),
                ('issara_tech_assessment_response_quality_production', models.IntegerField(blank=True, null=True)),
                ('issara_tech_assessment_response_quality_sr_mngmt', models.IntegerField(blank=True, null=True)),
                ('site_cooperation_with_ethicall_distribution', models.IntegerField(blank=True, null=True)),
                ('business_attitude_toward_suggested_remedies', models.IntegerField(blank=True, null=True)),
                ('business_attitude_toward_capacity_and_risks', models.IntegerField(blank=True, null=True)),
                ('business_attitude_toward_promoting_worker_voice', models.IntegerField(blank=True, null=True)),
                ('business_attitude_toward_worker_treatment', models.IntegerField(blank=True, null=True)),
                ('business_attitude_toward_issara', models.IntegerField(blank=True, null=True)),
                ('duration_of_time_taken_to_respond', models.IntegerField(blank=True, null=True)),
                ('duration_of_time_taken_to_revert_on_action_plan', models.IntegerField(blank=True, null=True)),
                ('duration_of_time_taken_to_resolve_issues', models.IntegerField(blank=True, null=True)),
                ('response_quality_comments', models.TextField(blank=True, null=True)),
                ('response_openness_comments', models.TextField(blank=True, null=True)),
                ('response_timeliness_comments', models.TextField(blank=True, null=True)),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='crc_scores', to='ilm_server_2.Supplier')),
            ],
            options={
                'verbose_name_plural': 'Supplier CRC *Ratings/Responses',
                'db_table': 'supplier_crc_responses',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecruiterCRCResponse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateField(auto_now_add=True, null=True)),
                ('avg_worker_response_feedback', models.IntegerField(blank=True, null=True)),
                ('avg_worker_recruitment_mngmt_feedback', models.IntegerField(blank=True, null=True)),
                ('issara_tech_assessment_response_quality_hr', models.IntegerField(blank=True, null=True)),
                ('issara_tech_assessment_response_quality_production', models.IntegerField(blank=True, null=True)),
                ('issara_tech_assessment_response_quality_sr_mngmt', models.IntegerField(blank=True, null=True)),
                ('site_cooperation_with_ethicall_distribution', models.IntegerField(blank=True, null=True)),
                ('business_attitude_toward_suggested_remedies', models.IntegerField(blank=True, null=True)),
                ('business_attitude_toward_capacity_and_risks', models.IntegerField(blank=True, null=True)),
                ('business_attitude_toward_promoting_worker_voice', models.IntegerField(blank=True, null=True)),
                ('business_attitude_toward_worker_treatment', models.IntegerField(blank=True, null=True)),
                ('business_attitude_toward_issara', models.IntegerField(blank=True, null=True)),
                ('duration_of_time_taken_to_respond', models.IntegerField(blank=True, null=True)),
                ('duration_of_time_taken_to_revert_on_action_plan', models.IntegerField(blank=True, null=True)),
                ('duration_of_time_taken_to_resolve_issues', models.IntegerField(blank=True, null=True)),
                ('response_quality_comments', models.TextField(blank=True, null=True)),
                ('response_openness_comments', models.TextField(blank=True, null=True)),
                ('response_timeliness_comments', models.TextField(blank=True, null=True)),
                ('recruiter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='crc_recruiter_scores', to='ilm_server_2.Recruiter')),
            ],
            options={
                'verbose_name_plural': 'Recruiter CRC *Ratings/Responses',
                'db_table': 'recruiter_crc_responses',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='KpiLegalViolation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Kpi Legal Violation',
                'db_table': 'kpi_legal_violation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='KpiRecommendedRemediation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Kpi Recommended Remediation',
                'db_table': 'kpi_recommended_remediation',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='KpiSystemsChange',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Kpi Systems Changes',
                'db_table': 'kpi_systems_changes',
                'managed': True,
            },
        ),
        migrations.AlterModelTable(
            name='kpilegalviolation',
            table='kpi_legal_violations',
        ),
        migrations.AlterModelTable(
            name='kpirecommendedremediation',
            table='kpi_recommended_remediations',
        ),
        migrations.AlterModelOptions(
            name='kpilegalviolation',
            options={'managed': True, 'verbose_name_plural': 'Kpi Legal Violations'},
        ),
        migrations.AlterModelOptions(
            name='kpirecommendedremediation',
            options={'managed': True, 'verbose_name_plural': 'Kpi Recommended Remediations'},
        ),
        migrations.CreateModel(
            name='EtiBaseCode',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=1024)),
                ('code', models.CharField(max_length=1024)),
                ('description', models.TextField(blank=True, null=True)),
                ('sub_code', models.CharField(max_length=1024)),
                ('sub_description', models.TextField(blank=True, null=True)),
                ('created', models.DateField(blank=True, null=True)),
                ('last_modified', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Eti Base Codes',
                'db_table': 'kpi_eti_base_codes',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Kpi',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=1024)),
                ('level', models.PositiveSmallIntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')], default=1)),
                ('goal', models.TextField(blank=True, null=True)),
                ('kpi_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.KpiCategory')),
                ('eti_base_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.EtiBaseCode')),
                ('kpi_legal_violation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.KpiLegalViolation')),
                ('kpi_recommended_remediation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.KpiRecommendedRemediation')),
                ('kpi_systems_change', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.KpiSystemsChange')),
            ],
            options={
                'db_table': 'kpis',
                'managed': True,
                'verbose_name': 'KPI',
                'verbose_name_plural': 'KPIs',
            },
        ),
        migrations.AlterModelTable(
            name='etibasecode',
            table='eti_base_codes',
        ),
        migrations.AlterField(
            model_name='etibasecode',
            name='created',
            field=models.DateField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='etibasecode',
            name='last_modified',
            field=models.DateField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='strategicpartnerfile',
            name='created',
            field=models.DateField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='strategicpartnerresponse',
            name='created',
            field=models.DateField(auto_now_add=True, null=True),
        ),
        migrations.AlterField(
            model_name='strategicpartnerresponse',
            name='last_modified',
            field=models.DateField(auto_now=True, null=True),
        ),
        migrations.AlterField(
            model_name='strategicpartnerresponsefile',
            name='created',
            field=models.DateField(auto_now_add=True, null=True),
        ),
        migrations.CreateModel(
            name='RecruiterIssue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('case_status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.CaseStatus')),
                ('issue_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.IssueCategory')),
                ('recruiter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Recruiter')),
                ('kpis', models.ManyToManyField(blank=True, to='ilm_server_2.Kpi')),
            ],
            options={
                'verbose_name_plural': 'Recruiter Issues',
                'db_table': 'recruiter_issues',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CaseIssue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('case_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.CaseStatus')),
                ('issue_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.IssueCategory')),
                ('affected_workers', models.IntegerField(blank=True, null=True)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('last_modified', models.DateField(auto_now=True, null=True)),
                ('level', models.IntegerField(blank=True, null=True)),
                ('kpis', models.ManyToManyField(blank=True, to='ilm_server_2.Kpi')),
            ],
            options={
                'verbose_name_plural': 'Case Issues',
                'db_table': 'case_issues',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='RecruiterResponse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=512)),
                ('description', models.TextField(blank=True, null=True)),
                ('response_proposed', models.TextField(blank=True, null=True)),
                ('intro_meeting', models.TextField(blank=True, null=True)),
                ('ethical_requirement_related_meeting', models.TextField(blank=True, null=True)),
                ('strategy_meeting', models.TextField(blank=True, null=True)),
                ('business_specific_training', models.TextField(blank=True, null=True)),
                ('stakeholer_multi_training', models.TextField(blank=True, null=True)),
                ('business_called_issara', models.TextField(blank=True, null=True)),
                ('issara_called_business', models.TextField(blank=True, null=True)),
                ('general_notes', models.TextField(blank=True, null=True)),
                ('next_steps', models.TextField(blank=True, null=True)),
                ('proposed_response_impacted_qty', models.IntegerField(blank=True, null=True)),
                ('response_focal_point', models.CharField(max_length=512)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_modified', models.DateField(auto_now=True, null=True)),
                ('interaction_channel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.InteractionChannel')),
                ('interaction_reason', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.InteractionReason')),
                ('issara_staff_involved', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('issue_category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.IssueCategory')),
                ('recruiter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Recruiter')),
                ('recruiter_issue', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.RecruiterIssue')),
                ('recruiter_response_files', models.ManyToManyField(blank=True, to='ilm_server_2.RecruiterResponseFile')),
                ('kpis', models.ManyToManyField(blank=True, to='ilm_server_2.Kpi')),
            ],
            options={
                'verbose_name_plural': 'Recruiter Responses',
                'db_table': 'recruiter_responses',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SupplierKpi',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('open', models.BooleanField(default=True)),
                ('opened_at', models.DateField(auto_now_add=True, null=True)),
                ('closed_at', models.DateField(blank=True, null=True)),
                ('kpi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Kpi')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Supplier')),
                ('affected_workers', models.IntegerField(blank=True, default=0, null=True)),
                ('closed_quality', models.CharField(choices=[('Poor', 'Poor'), ('Okay', 'Okay'), ('Good', 'Good'), ('Excellent', 'Excellent')], max_length=10, null=True)),
                ('overview_date', models.DateField(blank=True, null=True)),
                ('remediation_aligned', models.CharField(choices=[('None', 'None'), ('A little', 'A little'), ('A lot', 'A lot')], default='None', max_length=8, null=True)),
                ('remediation_business_steps_remaining', models.TextField(blank=True, null=True)),
                ('remediation_business_steps_taken', models.TextField(blank=True, null=True)),
                ('remediation_documents_deadline', models.DateField(blank=True, null=True)),
                ('remediation_documents_owed', models.IntegerField(blank=True, default=0)),
                ('remediation_documents_provided', models.IntegerField(blank=True, default=0)),
                ('remediation_issara_recommendation', models.TextField(blank=True, null=True)),
                ('remediation_notes', models.TextField(blank=True, null=True)),
                ('remediation_owed_baht', models.IntegerField(blank=True, default=0)),
                ('remediation_owed_kyat', models.IntegerField(blank=True, default=0)),
                ('remediation_owed_ringitt', models.IntegerField(blank=True, default=0)),
                ('remediation_owed_usd', models.IntegerField(blank=True, default=0)),
                ('remediation_paid_baht', models.IntegerField(blank=True, default=0)),
                ('remediation_paid_kyat', models.IntegerField(blank=True, default=0)),
                ('remediation_paid_ringitt', models.IntegerField(blank=True, default=0)),
                ('remediation_paid_usd', models.IntegerField(blank=True, default=0)),
                ('remediation_payment_deadline', models.DateField(blank=True, null=True)),
                ('remediation_progress', models.CharField(choices=[('None', 'None'), ('A little', 'A little'), ('A lot', 'A lot')], default='None', max_length=8, null=True)),
                ('remediation_workers_paid', models.IntegerField(blank=True, default=0)),
                ('retaliation', models.BooleanField(default=False)),
                ('systems_change_aligned', models.CharField(choices=[('None', 'None'), ('A little', 'A little'), ('A lot', 'A lot')], default='None', max_length=8, null=True)),
                ('systems_change_business_steps_remaining', models.TextField(blank=True, null=True)),
                ('systems_change_business_steps_taken', models.TextField(blank=True, null=True)),
                ('systems_change_deadline', models.DateField(blank=True, null=True)),
                ('systems_change_issara_recommendation', models.TextField(blank=True, null=True)),
                ('systems_change_progress', models.CharField(choices=[('None', 'None'), ('A little', 'A little'), ('A lot', 'A lot')], default='None', max_length=8, null=True)),
                ('closed_notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Supplier KPIs',
                'db_table': 'supplier_kpis',
                'managed': True,
            },
        ),
        migrations.AlterField(
            model_name='supplier',
            name='district',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.District'),
        ),
        migrations.AlterField(
            model_name='supplier',
            name='industry',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Industry'),
        ),
        migrations.AlterField(
            model_name='supplier',
            name='province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Province'),
        ),
        migrations.AlterField(
            model_name='supplier',
            name='vessel_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.VesselType'),
        ),
        migrations.CreateModel(
            name='SupplierKpiUpdate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('overview_date', models.DateField(blank=True, null=True)),
                ('closed_quality', models.CharField(choices=[('Poor', 'Poor'), ('Okay', 'Okay'), ('Good', 'Good'), ('Excellent', 'Excellent')], max_length=10, null=True)),
                ('affected_workers', models.IntegerField(blank=True, default=0, null=True)),
                ('retaliation', models.BooleanField(default=False)),
                ('remediation_issara_recommendation', models.TextField(blank=True, null=True)),
                ('remediation_progress', models.CharField(choices=[('None', 'None'), ('A little', 'A little'), ('A lot', 'A lot')], default='None', max_length=8, null=True)),
                ('remediation_aligned', models.CharField(choices=[('None', 'None'), ('A little', 'A little'), ('A lot', 'A lot')], default='None', max_length=8, null=True)),
                ('remediation_business_steps_taken', models.TextField(blank=True, null=True)),
                ('remediation_business_steps_remaining', models.TextField(blank=True, null=True)),
                ('remediation_payment_deadline', models.DateField(blank=True, null=True)),
                ('remediation_owed_baht', models.IntegerField(blank=True, default=0)),
                ('remediation_owed_kyat', models.IntegerField(blank=True, default=0)),
                ('remediation_owed_ringitt', models.IntegerField(blank=True, default=0)),
                ('remediation_owed_usd', models.IntegerField(blank=True, default=0)),
                ('remediation_paid_baht', models.IntegerField(blank=True, default=0)),
                ('remediation_paid_kyat', models.IntegerField(blank=True, default=0)),
                ('remediation_paid_ringitt', models.IntegerField(blank=True, default=0)),
                ('remediation_paid_usd', models.IntegerField(blank=True, default=0)),
                ('remediation_workers_paid', models.IntegerField(blank=True, default=0)),
                ('remediation_documents_owed', models.IntegerField(blank=True, default=0)),
                ('remediation_documents_provided', models.IntegerField(blank=True, default=0)),
                ('remediation_documents_deadline', models.DateField(blank=True, null=True)),
                ('remediation_notes', models.TextField(blank=True, null=True)),
                ('systems_change_issara_recommendation', models.TextField(blank=True, null=True)),
                ('systems_change_aligned', models.CharField(choices=[('None', 'None'), ('A little', 'A little'), ('A lot', 'A lot')], default='None', max_length=8, null=True)),
                ('systems_change_progress', models.CharField(choices=[('None', 'None'), ('A little', 'A little'), ('A lot', 'A lot')], default='None', max_length=8, null=True)),
                ('systems_change_business_steps_taken', models.TextField(blank=True, null=True)),
                ('systems_change_business_steps_remaining', models.TextField(blank=True, null=True)),
                ('systems_change_deadline', models.DateField(blank=True, null=True)),
                ('supplier_kpi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='updates', to='ilm_server_2.SupplierKpi')),
                ('closed_at', models.DateField(blank=True, null=True)),
                ('opened_at', models.DateField(blank=True, null=True)),
                ('closed_notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Supplier KPI Updates',
                'db_table': 'supplier_kpi_updates',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FieldworkActivityType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=256, null=True)),
            ],
            options={
                'verbose_name_plural': 'Fieldwork Activity Types',
                'db_table': 'fieldwork_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='FieldworkActivity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fieldwork_date', models.DateField(blank=True, null=True)),
                ('outreach_target', models.IntegerField(blank=True, null=True)),
                ('fieldwork_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ilm_server_2.Country')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ilm_server_2.District')),
                ('fieldwork_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ilm_server_2.FieldworkActivityType')),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ilm_server_2.Province')),
                ('recruiters', models.ManyToManyField(blank=True, to='ilm_server_2.Recruiter')),
                ('suppliers', models.ManyToManyField(blank=True, to='ilm_server_2.Supplier')),
                ('nationality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ilm_server_2.Nationality')),
            ],
            options={
                'verbose_name_plural': 'Fieldwork Activity',
                'db_table': 'fieldwork_activities',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MonthlyWorkerVoice',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('month_year', models.DateField(blank=True, null=True)),
                ('mm_hotline_total', models.IntegerField(blank=True, null=True)),
                ('yangon_hotline_total', models.IntegerField(blank=True, null=True)),
                ('mm_fb_total', models.IntegerField(blank=True, null=True)),
                ('mm_line_total', models.IntegerField(blank=True, null=True)),
                ('mm_viber_total', models.IntegerField(blank=True, null=True)),
                ('cb_hotline_total', models.IntegerField(blank=True, null=True)),
                ('cb_fb_total', models.IntegerField(blank=True, null=True)),
                ('cb_line_total', models.IntegerField(blank=True, null=True)),
                ('cb_viber_total', models.IntegerField(blank=True, null=True)),
                ('thai_hotline_total', models.IntegerField(blank=True, null=True)),
                ('thai_fb_total', models.IntegerField(blank=True, null=True)),
                ('thai_line_total', models.IntegerField(blank=True, null=True)),
                ('thai_viber_total', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Monthly Worker Voice',
                'db_table': 'monthly_worker_voice',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CaseCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Case Categories',
                'db_table': 'case_categories',
                'managed': True,
            },
        ),
        migrations.RemoveField(
            model_name='strategicpartnerresponse',
            name='description',
        ),
        migrations.RemoveField(
            model_name='strategicpartnerresponse',
            name='name',
        ),
        migrations.AlterField(
            model_name='strategicpartnerresponse',
            name='issara_user_focal_point',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.IssaraUser'),
        ),
        migrations.AlterField(
            model_name='strategicpartnerresponse',
            name='response_interaction_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.ResponseInteractionType'),
        ),
        migrations.CreateModel(
            name='SupplyChain',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('strategic_partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.StrategicPartner')),
                ('suppliers', models.ManyToManyField(blank=True, to='ilm_server_2.Supplier')),
                ('name', models.CharField(max_length=512)),
            ],
            options={
                'verbose_name_plural': 'Supplier Chains',
                'db_table': 'supply_chains',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserTask',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('source_id', models.PositiveIntegerField()),
                ('source_type', models.CharField(choices=[('Call', 'Call'), ('Business Response', 'Business Response')], default='Call', max_length=20)),
                ('deadline', models.DateField(blank=True, null=True)),
                ('done', models.BooleanField(default=False)),
                ('created_at', models.DateField(auto_now_add=True, null=True)),
                ('modified_at', models.DateField(auto_now=True, null=True)),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks_assigned_by_user', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks_assigned_to_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Users Tasks',
                'db_table': 'user_tasks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EthicalRecruitmentMeeting',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('location', models.CharField(blank=True, max_length=512, null=True)),
                ('assesment', models.CharField(blank=True, max_length=512, null=True)),
                ('supplier_contacts', models.CharField(blank=True, max_length=512, null=True)),
                ('recruiter_contacts', models.CharField(blank=True, max_length=512, null=True)),
                ('legal_complience_labour_laws', models.IntegerField(blank=True, null=True)),
                ('legal_complience_criminal_laws', models.IntegerField(blank=True, null=True)),
                ('legal_complience_recruitment_policies', models.IntegerField(blank=True, null=True)),
                ('legal_complience_notes', models.TextField(blank=True, null=True)),
                ('legal_complience_priority_notes', models.TextField(blank=True, null=True)),
                ('professional_conduct_agency', models.IntegerField(blank=True, null=True)),
                ('professional_conduct_employer', models.IntegerField(blank=True, null=True)),
                ('professional_conduct_agency_capacity', models.IntegerField(blank=True, null=True)),
                ('professional_conduct_employer_capacity', models.IntegerField(blank=True, null=True)),
                ('professional_conduct_cooperation_efficiency', models.IntegerField(blank=True, null=True)),
                ('professional_conduct_notes', models.TextField(blank=True, null=True)),
                ('professional_conduct_priority_notes', models.TextField(blank=True, null=True)),
                ('free_of_charge_recruitment_fees', models.IntegerField(blank=True, null=True)),
                ('free_of_charge_transparency', models.IntegerField(blank=True, null=True)),
                ('free_of_charge_other_fees', models.IntegerField(blank=True, null=True)),
                ('free_of_charge_passport_fees', models.IntegerField(blank=True, null=True)),
                ('free_of_charge_destination_fees', models.IntegerField(blank=True, null=True)),
                ('free_of_charge_notes', models.TextField(blank=True, null=True)),
                ('free_of_charge_priority_notes', models.TextField(blank=True, null=True)),
                ('terms_of_engagement_business_information', models.IntegerField(blank=True, null=True)),
                ('terms_of_engagement_job_description', models.IntegerField(blank=True, null=True)),
                ('terms_of_engagement_recruitment_process', models.IntegerField(blank=True, null=True)),
                ('terms_of_engagement_overall_management', models.IntegerField(blank=True, null=True)),
                ('terms_of_engagement_complete_job_information', models.IntegerField(blank=True, null=True)),
                ('terms_of_engagement_interview_process', models.IntegerField(blank=True, null=True)),
                ('terms_of_engagement_medical_checks', models.IntegerField(blank=True, null=True)),
                ('terms_of_engagement_contract_terms', models.IntegerField(blank=True, null=True)),
                ('terms_of_engagement_original_contract_provision', models.IntegerField(blank=True, null=True)),
                ('terms_of_engagement_predeparture_training', models.IntegerField(blank=True, null=True)),
                ('terms_of_engagement_predeparture_training_worker_rights', models.IntegerField(blank=True, null=True)),
                ('terms_of_engagement_travel_to_workplace', models.IntegerField(blank=True, null=True)),
                ('terms_of_engagement_notes', models.TextField(blank=True, null=True)),
                ('terms_of_engagement_priority_notes', models.TextField(blank=True, null=True)),
                ('wages_deductions_benefits_information', models.IntegerField(blank=True, null=True)),
                ('wages_deductions_benefits_predeparture_training', models.IntegerField(blank=True, null=True)),
                ('wages_deductions_benefits_multilingualism', models.IntegerField(blank=True, null=True)),
                ('wages_deductions_benefits_digitalization', models.IntegerField(blank=True, null=True)),
                ('wages_deductions_benefits_notes', models.TextField(blank=True, null=True)),
                ('wages_deductions_benefits_priority_notes', models.TextField(blank=True, null=True)),
                ('conditions_health_and_safety', models.IntegerField(blank=True, null=True)),
                ('conditions_document_control', models.IntegerField(blank=True, null=True)),
                ('conditions_workers_housing', models.IntegerField(blank=True, null=True)),
                ('conditions_freedom_of_movement', models.IntegerField(blank=True, null=True)),
                ('conditions_notes', models.TextField(blank=True, null=True)),
                ('conditions_priority_notes', models.TextField(blank=True, null=True)),
                ('grievance_mechanism_encouragement', models.IntegerField(blank=True, null=True)),
                ('grievance_mechanism_punitive_action', models.IntegerField(blank=True, null=True)),
                ('grievance_mechanism_credibility', models.IntegerField(blank=True, null=True)),
                ('grievance_mechanism_hr_staff', models.IntegerField(blank=True, null=True)),
                ('grievance_mechanism_notes', models.TextField(blank=True, null=True)),
                ('grievance_mechanism_priority_notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_ethical_recruitment_meetings', to=settings.AUTH_USER_MODEL)),
                ('issara_staff', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('recruiter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Recruiter')),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Supplier')),
            ],
            options={
                'verbose_name_plural': 'Ethical Recruitment Meetings',
                'db_table': 'ethical_recruitment_meetings',
                'managed': True,
            },
        ),
        migrations.AlterField(
            model_name='strategicpartnerresponse',
            name='issara_user_focal_point',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='BusinessResponse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('suppliers_notes', models.TextField(blank=True, null=True)),
                ('recruiters_notes', models.TextField(blank=True, null=True)),
                ('global_buyers_notes', models.TextField(blank=True, null=True)),
                ('other_parties_notes', models.TextField(blank=True, null=True)),
                ('event_details', models.TextField(blank=True, null=True)),
                ('suppliers_next_steps', models.TextField(blank=True, null=True)),
                ('suppliers_next_steps_deadline', models.DateField(blank=True, null=True)),
                ('suppliers_focal_points', models.CharField(blank=True, max_length=512, null=True)),
                ('recruiters_next_steps', models.TextField(blank=True, null=True)),
                ('recruiters_next_steps_deadline', models.DateField(blank=True, null=True)),
                ('recruiters_focal_points', models.CharField(blank=True, max_length=512, null=True)),
                ('global_buyers_next_steps', models.TextField(blank=True, null=True)),
                ('global_buyers_next_steps_deadline', models.DateField(blank=True, null=True)),
                ('global_buyers_focal_points', models.CharField(blank=True, max_length=512, null=True)),
                ('issara_next_steps', models.TextField(blank=True, null=True)),
                ('issara_next_steps_deadline', models.DateField(blank=True, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('modified_at', models.DateField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_business_responses', to=settings.AUTH_USER_MODEL)),
                ('global_buyers', models.ManyToManyField(blank=True, to='ilm_server_2.StrategicPartner')),
                ('issara_focal_points', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('recruiters', models.ManyToManyField(blank=True, to='ilm_server_2.Recruiter')),
                ('suppliers', models.ManyToManyField(blank=True, to='ilm_server_2.Supplier')),
                ('event_location', models.CharField(blank=True, max_length=256, null=True)),
                ('event_interaction_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ilm_server_2.ResponseInteractionType')),
                ('event_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Business Responses',
                'db_table': 'business_responses',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_modified', models.DateField(auto_now=True, null=True)),
                ('client_nickname', models.CharField(blank=True, max_length=45, null=True)),
                ('client_phonenumber', models.CharField(blank=True, max_length=45, null=True)),
                ('client_line_account', models.CharField(blank=True, max_length=1024, null=True)),
                ('client_facebook_account', models.CharField(blank=True, max_length=1024, null=True)),
                ('client_viber_account', models.CharField(blank=True, max_length=1024, null=True)),
                ('client_share_info_consent', models.CharField(blank=True, max_length=112, null=True)),
                ('issara_supply_chain', models.CharField(blank=True, max_length=512, null=True)),
                ('non_supply_chain', models.CharField(blank=True, max_length=512, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('debt_bondage', models.CharField(blank=True, max_length=45, null=True)),
                ('debt_bondage_detail', models.TextField(blank=True, null=True)),
                ('vot_needs', models.TextField(blank=True, null=True)),
                ('referral_notes', models.TextField(blank=True, null=True)),
                ('next_steps', models.TextField(blank=True, null=True)),
                ('work_place_details', models.TextField(blank=True, null=True)),
                ('dead_line_date', models.DateField(blank=True, null=True)),
                ('final_remarks', models.TextField(blank=True, null=True)),
                ('client_contract_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.ContractType')),
                ('client_document_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.DocumentType')),
                ('client_ethnicity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Ethnicity')),
                ('client_gender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Gender')),
                ('client_nationality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Nationality')),
                ('client_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.ClientStatus')),
                ('client_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.ClientType')),
                ('destination_recruiter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='destination_recruiter', to='ilm_server_2.Recruiter')),
                ('issara_staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cases', to=settings.AUTH_USER_MODEL)),
                ('next_steps_issara_staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cases_next_step', to=settings.AUTH_USER_MODEL)),
                ('rating_dest_employer', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('rating_dest_recruiter', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('rating_source_broker', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('rating_source_recruiter', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('referral_action', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.ReferralAction')),
                ('source_recruiter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='source_recruiter', to='ilm_server_2.Recruiter')),
                ('source_upstream_broker', models.CharField(blank=True, max_length=112, null=True)),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cases', to='ilm_server_2.Supplier')),
                ('work_place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.WorkPlace')),
                ('case_how_hear_issara', models.ManyToManyField(blank=True, to='ilm_server_2.HowHearIssara')),
                ('client_time_at_job', models.IntegerField(blank=True, null=True)),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Country')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.District')),
                ('province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Province')),
                ('client_crossing_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_crossing_country', to='ilm_server_2.Country')),
                ('client_crossing_district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_crossing_district', to='ilm_server_2.District')),
                ('client_crossing_province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_crossing_province', to='ilm_server_2.Province')),
                ('client_origin_country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_origin_country', to='ilm_server_2.Country')),
                ('client_origin_district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_origin_district', to='ilm_server_2.District')),
                ('client_origin_province', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='client_origin_province', to='ilm_server_2.Province')),
                ('case_interactions', models.ManyToManyField(blank=True, to='ilm_server_2.CaseInteraction')),
                ('issue_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.IssueCategory')),
                ('kpis', models.ManyToManyField(blank=True, to='ilm_server_2.Kpi')),
                ('issue_description', models.TextField(blank=True, null=True)),
                ('case_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.CaseCategory')),
                ('debt_bondage_broker', models.CharField(blank=True, max_length=45, null=True)),
                ('debt_bondage_detail_broker', models.TextField(blank=True, null=True)),
                ('issue_getting_better', models.CharField(blank=True, max_length=45, null=True)),
                ('issue_getting_better_description', models.TextField(blank=True, null=True)),
                ('issue_workers_affected', models.PositiveIntegerField(blank=True, null=True)),
                ('issue_workers_affected_description', models.TextField(blank=True, null=True)),
                ('case_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.CaseStatus')),
                ('issue_legacy_level', models.IntegerField(blank=True, null=True)),
                ('industry', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ilm_server_2.Industry')),
                ('original_ilm_one_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cases',
                'managed': True,
            },
        ),
        migrations.AlterField(
            model_name='strategicpartnerresponse',
            name='issara_user_focal_point',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.DeleteModel(
            name='IssaraUser',
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_version', models.CharField(max_length=4)),
            ],
            options={
                'db_table': 'config',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SubIndustry',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('industry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Industry')),
            ],
            options={
                'verbose_name_plural': 'SubIndustries',
                'db_table': 'subindustries',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='supplier',
            name='subindustry',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.SubIndustry'),
        ),
        migrations.CreateModel(
            name='FactoryType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Factory Types',
                'db_table': 'factory_types',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MmThaiDemandData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('week', models.CharField(max_length=512)),
                ('year', models.CharField(max_length=512)),
                ('month', models.CharField(max_length=512)),
                ('year_month', models.CharField(max_length=512)),
                ('recruiter_name', models.CharField(max_length=512)),
                ('supplier_name', models.CharField(max_length=512)),
                ('province', models.CharField(max_length=512)),
                ('type_of_factory', models.CharField(max_length=512)),
                ('industry', models.CharField(max_length=512)),
                ('subindustry', models.CharField(max_length=512)),
                ('Male', models.CharField(max_length=512)),
                ('Female', models.CharField(max_length=512)),
                ('factory_type', models.CharField(max_length=512)),
            ],
            options={
                'managed': True,
                'verbose_name_plural': 'MM Thai Demand Data',
            },
        ),
        migrations.AlterModelTable(
            name='mmthaidemanddata',
            table='mm_thai_demand_data',
        ),
        migrations.RemoveField(
            model_name='mmthaidemanddata',
            name='Female',
        ),
        migrations.RemoveField(
            model_name='mmthaidemanddata',
            name='Male',
        ),
        migrations.RemoveField(
            model_name='mmthaidemanddata',
            name='factory_type',
        ),
        migrations.AddField(
            model_name='mmthaidemanddata',
            name='factorytype',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.FactoryType'),
        ),
        migrations.AddField(
            model_name='mmthaidemanddata',
            name='ilm_industry',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Industry'),
        ),
        migrations.AddField(
            model_name='mmthaidemanddata',
            name='ilm_subindustry',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.SubIndustry'),
        ),
        migrations.AddField(
            model_name='mmthaidemanddata',
            name='num_females',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='mmthaidemanddata',
            name='num_males',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='mmthaidemanddata',
            name='recruiter',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Recruiter'),
        ),
        migrations.AddField(
            model_name='mmthaidemanddata',
            name='supplier',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Supplier'),
        ),
        migrations.AddField(
            model_name='mmthaidemanddata',
            name='record_date',
            field=models.DateField(auto_now_add=True, null=True),
        ),
        migrations.CreateModel(
            name='SupplierKpiUpdateStatus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Supplier KPI Update Statuses',
                'db_table': 'supplier_kpi_update_statuses',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='supplierkpi',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.SupplierKpiUpdateStatus'),
        ),
        migrations.AddField(
            model_name='supplierkpiupdate',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.SupplierKpiUpdateStatus'),
        ),
        migrations.AddField(
            model_name='supplier',
            name='golden_dreams_employer_id',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='mmthaidemanddata',
            name='num_total',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='MmThaiSendingData',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('record_date', models.DateField(auto_now_add=True, null=True)),
                ('demand_approved_male', models.IntegerField(blank=True, null=True)),
                ('demand_approved_female', models.IntegerField(blank=True, null=True)),
                ('demand_approved_total', models.IntegerField(blank=True, null=True)),
                ('visa_issued_male', models.IntegerField(blank=True, null=True)),
                ('visa_issued_female', models.IntegerField(blank=True, null=True)),
                ('visa_issued_total', models.IntegerField(blank=True, null=True)),
                ('smart_card_issued_male', models.IntegerField(blank=True, null=True)),
                ('smart_card_issued_female', models.IntegerField(blank=True, null=True)),
                ('smart_card_issued_total', models.IntegerField(blank=True, null=True)),
                ('factory_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ilm_server_2.FactoryType')),
                ('industry', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Industry')),
                ('province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='ilm_server_2.Province')),
                ('recruiter', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Recruiter')),
                ('subindustry', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.SubIndustry')),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.Supplier')),
                ('sr_num', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'managed': True,
                'verbose_name_plural': 'MM Thai Sending Data',
            },
        ),
        migrations.AlterModelTable(
            name='mmthaisendingdata',
            table='mm_thai_sending_data',
        ),
        migrations.AddField(
            model_name='mmthaisendingdata',
            name='sending_female',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='mmthaisendingdata',
            name='sending_male',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='mmthaisendingdata',
            name='sending_total',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.RemoveField(
            model_name='mmthaisendingdata',
            name='sr_num',
        ),
        migrations.AddField(
            model_name='supplier',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='supplier',
            name='website',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='CallsByCount',
            fields=[
                ('call_count', models.AutoField(primary_key=True, serialize=False)),
                ('month_year', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.AddField(
            model_name='district',
            name='lat',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='district',
            name='lng',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='supplier',
            name='lat',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='supplier',
            name='lng',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='strategicpartner',
            name='agreement',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='strategicpartner',
            name='background',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='strategicpartner',
            name='image',
            field=models.CharField(blank=True, max_length=1024, null=True),
        ),
        migrations.AddField(
            model_name='strategicpartner',
            name='lat',
            field=models.CharField(blank=True, max_length=1024, null=True),
        ),
        migrations.AddField(
            model_name='strategicpartner',
            name='lng',
            field=models.CharField(blank=True, max_length=1024, null=True),
        ),
        migrations.AddField(
            model_name='strategicpartner',
            name='notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='strategicpartner',
            name='partner_users',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='strategicpartner',
            name='website',
            field=models.CharField(blank=True, max_length=1024, null=True),
        ),
        migrations.AddField(
            model_name='case',
            name='subindustry',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='ilm_server_2.SubIndustry'),
        ),
        migrations.AlterField(
            model_name='supplierkpi',
            name='opened_at',
            field=models.DateField(blank=True, default=django.utils.timezone.now, null=True),
        ),
        migrations.AlterField(
            model_name='supplierkpiupdate',
            name='opened_at',
            field=models.DateField(blank=True, default=django.utils.timezone.now, null=True),
        ),
        migrations.AlterField(
            model_name='case',
            name='dead_line_date',
            field=models.DateField(default=django.utils.timezone.now),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='case',
            name='dead_line_date',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['-name'], name='suppliers_name_a52a19_idx'),
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['name'], name='suppliers_name_ed482a_idx'),
        ),
        migrations.RemoveIndex(
            model_name='supplier',
            name='suppliers_name_ed482a_idx',
        ),
        migrations.AddIndex(
            model_name='vesseltype',
            index=models.Index(fields=['id'], name='vessel_type_id_56e636_idx'),
        ),
        migrations.AddIndex(
            model_name='supplier',
            index=models.Index(fields=['industry'], name='suppliers_industr_32e155_idx'),
        ),
        migrations.RemoveIndex(
            model_name='supplier',
            name='suppliers_industr_32e155_idx',
        ),
        migrations.AddIndex(
            model_name='mmthaisendingdata',
            index=models.Index(fields=['-record_date'], name='mm_thai_sen_record__d2d5cd_idx'),
        ),
        migrations.RenameField(
            model_name='supplierkpi',
            old_name='remediation_issara_recommendation',
            new_name='remediation_issara_recommendation',
        ),
        migrations.RenameField(
            model_name='supplierkpiupdate',
            old_name='remediation_issara_recommendation',
            new_name='remediation_issara_recommendation',
        ),
        migrations.AddField(
            model_name='supplierkpi',
            name='remediation_action',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='supplierkpi',
            name='remediation_validation',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='supplierkpi',
            name='remediation_results',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='supplierkpiupdate',
            name='remediation_results',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='supplierkpiupdate',
            name='remediation_action',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='supplierkpiupdate',
            name='remediation_validation',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='supplychain',
            name='suppliers',
            field=models.ManyToManyField(blank=True, related_name='supply_chains', to='ilm_server_2.Supplier'),
        ),
        migrations.CreateModel(
            name='KpiStatusEmailNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivered', models.BooleanField(default=False)),
                ('error_message', models.TextField(null=True)),
                ('strategic_partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.StrategicPartner')),
                ('supplier_kpi', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ilm_server_2.SupplierKpi')),
                ('date', models.DateField(default=django.utils.timezone.now)),
            ],
        ),
    ]
